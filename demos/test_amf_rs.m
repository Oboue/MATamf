% Demo for an advanced median filter (AMF) for improving the signal-to-noise ratio of seismological datasets

% Script to plot Figures 8, 9, 10, 11, 12 and 13

%  Copyright (C) Oboue et al., 2022

%  This program is free software: you can redistribute it and/or modify
%  it under the terms of the GNU General Public License as published
%  by the Free Software Foundation, either version 3 of the License, or
%  any later version.

%  This program is distributed in the hope that it will be useful,
%  but WITHOUT ANY WARRANTY; without even the implied warranty of
%  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%  GNU General Public License for more details: http://www.gnu.org/licenses/

%  References

%  Oboue et al., 2022
%  Huang, G., M. Bai, Q. Zhao, W. Chen, and Y. Chen, 2021, Erratic noise suppression using iterative structure-oriented space-varying median filtering with sparsity constraint, Geophysical Prospecting, 69, 101-121.
%  Chen, Y., S. Zu, Y. Wang, and X. Chen, 2020, Deblending of simultaneous-source data using a structure-oriented space varying median filter, Geophysical Journal International, 222, 1805�1�723.
%  Zhao, Q., Q. Du, X. Gong, and Y. Chen, 2018, Signal-preserving erratic noise attenuation via iterative robust sparsity-promoting filter, IEEE Transactions on Geoscience and Remote Sensing, 56, 1558-0644.
%-------------------------------------------------------------------------
clc;clear;close all;
%% addpath
addpath('../amf_data/');
addpath('../amfsrcs/');
addpath('../seistr/');

%% read field reflection seismic data 1
fid=fopen('real2.bin','r');
d2d=fread(fid,[256,256],'float');

dn=amf_scale(d2d,2);
[n1,n2]=size(dn);
din1=dn;
%%  Denosing using the BP method
% Parameter tuning for the BP method
%
dt=0.0005; % sampling
flo=0;     % Low frequency in band, default is 0
fhi=200;   % High frequency in band, default is Nyquist
nplo=6;    % number of poles for low cutoff
nphi=6;    % number of poles for high cutoff
phase=0;   % y: minimum phase, n: zero phase
verb0=0;   % verbosity flag
%
tic
d1_bp1=amf_bandpass(din1,dt,flo,fhi,nplo,nphi,phase,verb0);
toc
%
%% Denosing using the BP+SOSVMF method 
% Parameter tuning：add the key parameters of the SOSVMF method

niter=2;                      % number of nonlinear iterations
liter=10;                     % liter: number of linear iterations (in divn)
order1=3;                     % order: accuracy order
eps_dv=0.01;                  % eps_dv: eps for divn  (default: 0.01)
eps_cg=1;                     % eps_cg: eps for CG    (default: 1)
tol_cg=0.000001;              % tol_cg: tolerence for CG (default: 0.000001)
rect(1)=50;                   % rect:  smoothing radius (ndim*1)
rect(2)=50;                   % "      "        "
rect(3)=1;                    % "      "        "
verb1=1;                      % verbosity flag

adj=0;                        % adjoint flag
add=0;                        % adding flag
ns=8;                         % spray radius
order2=2;                     % PWD order
eps=0.01;                     % regularization (default:0.01);
ndn=n1*n2;                    % size of dn (n1*n2)
nds=n1*n2;                    % size of ds (n1*n2)
type_mf=1;                    % 0 (MF) or 1 (SVMF)
ifsmooth=0;                   % 1 (if smooth) or 0 (only MF)

%
tic
d1_bpsosvmf1=amf_bandpasssosvmf(din1,dt,flo,fhi,nplo,nphi,phase,verb0,niter,liter,order1,eps_dv,eps_cg,tol_cg,rect,verb1,adj,add,n1,n2,ns,order2,eps,ndn,nds,type_mf,ifsmooth);
toc
%

%% Denoising using the BP+SOSVMF+FK method 
%  Parameter tuning：add the key parameters of the dip filter in FK domain method
%
w=0.00;   % half width (in percentage) of the cone filter (i.e., w*nk=nwidth)
%
tic
d1_bpsosvmffk1=amf_bandpasssosvmffk(din1,dt,flo,fhi,nplo,nphi,phase,verb0,niter,liter,order1,eps_dv,eps_cg,tol_cg,rect,verb1,adj,add,n1,n2,ns,order2,eps,ndn,nds,type_mf,ifsmooth,w);
toc
%
%% Denoising data using the BP+SOSVMF+FK+curvelet method 
%  Parameter tuning：add the key parameters of the curvelet method
%
c1=1;                % Type of the transform(0: complex-valued curvelets,1: real-valued curvelets)
c2=1;                % Chooses one of two possibilities for the coefficients at the finest level(1: curvelets,2: wavelets)
c3=0.5;               % Thresholding parameter (alpha)
niter1=10;           % Number of iteration
% 
tic
d1_bpsosvmffkcurvelet1=amf_bandpasssosvmffkcurvelet(din1,dt,flo,fhi,nplo,nphi,phase,verb0,niter,liter,order1,eps_dv,eps_cg,tol_cg,rect,verb1,adj,add,n1,n2,ns,order2,eps,ndn,nds,type_mf,ifsmooth,w,c1,c2,c3,niter1);
toc
%
%% Denoising using the AMF method 
%  Parameter tuning: add the key parameters for the local orthogonalization operation

par.dt=0.0005; % sampling
par.flo=0;     % Low frequency in band, default is 0
par.fhi=200;   % High frequency in band, default is Nyquist
par.nplo=6;    % number of poles for low cutoff
par.nphi=6;    % number of poles for high cutoff
par.phase=0;   % y: minimum phase, n: zero phase
par.verb0=0;   % verbosity flag

par.niter=niter;                 % number of nonlinear iterations
par.liter=liter;                 % liter: number of linear iterations (in divn)
par.order1=order1;               % order: accuracy order
par.eps_dv=eps_dv;               % eps_dv: eps for divn  (default: 0.01)
par.eps_cg=eps_cg;               % eps_cg: eps for CG    (default: 1)
par.tol_cg=tol_cg;               % tol_cg: tolerence for CG (default: 0.000001)
par.rect(1)=rect(1);             % rect:  smoothing radius (ndim*1)
par.rect(2)=rect(2);             % "      "        "
par.rect(3)=rect(3);             % "      "        "
par.verb1=verb1;                 % verbosity flag

par.adj=adj;                     % adjoint flag
par.add=add;                     % adding flag
par.ns=ns;                       % spray radius
par.order2=order2;               % PWD order
par.eps=eps;                     % regularization (default:0.01);
par.ndn=ndn;                     % size of dn (n1*n2)
par.nds=nds;                     % size of ds (n1*n2)
par.type_mf=type_mf;             % 0 (MF) or 1 (SVMF)
par.ifsmooth=ifsmooth;                   % 1 (if smooth) or 0 (only MF)

par.w=w;                        % half width (in percentage) of the cone filter (i.e., w*nk=nwidth)

par.c1=c1;                      % Type of the transform(0: complex-valued curvelets,1: real-valued curvelets)
par.c2=c2;                      % Chooses one of two possibilities for the coefficients at the finest level(1: curvelets,2: wavelets)
par.c3=c3;                      % Thresholding parameter (alpha)
par.niter1=niter1;              % Number of iteration

%

rec = zeros(3, 1);    % 3-D vector denoting smooth radius 
par.rec(1) = 10;
par.rec(2) = 10;
par.rec(3) = 1;
par.eps1=0;               % regularization parameter, default 0.0
par.niter2=20;            % number of CG iterations
par.verb=1;               % verbosity flag (default: 0) 
%tic
d1_amf1=amf(din1,par);
toc
%%
% Plot figures

t=[0:n1]*0.004;
x=1:n2;
ngap=10;
ngap0=250;
d1_11=[din1,zeros(n1,ngap),d1_bp1,din1-d1_bp1,zeros(n1,ngap),d1_bpsosvmf1,din1-d1_bpsosvmf1];
d1_21=[d1_bpsosvmffkcurvelet1,d1_bpsosvmffkcurvelet1-din1,zeros(n1,ngap),d1_amf1,din1-d1_amf1];
%% local similarity maps

rect=[10,10,1];niter=20;eps=0;verb=0;
[simid11]=amf_localsimi(din1-d1_bp1,d1_bp1,rect,niter,eps,verb);
[simid12]=amf_localsimi(din1-d1_bpsosvmf1,d1_bpsosvmf1,rect,niter,eps,verb);
% [simid13]=amf_localsimi(din1-d1_bpsosvmffk,d1_bpsosvmffk,rect,niter,eps,verb);
[simid14]=amf_localsimi(din1-d1_bpsosvmffkcurvelet1,d1_bpsosvmffkcurvelet1,rect,niter,eps,verb);
[simid15]=amf_localsimi(din1-d1_amf1,d1_amf1,rect,niter,eps,verb);
d1_sim1=[simid11,zeros(n1,ngap),simid12,zeros(n1,ngap),simid14,zeros(n1,ngap),simid15];
%% read field reflection seismic data 2

fid=fopen('real.bin','r');
ori=fread(fid,[800,220],'float');

dn=amf_scale(ori,2);
[n1,n2]=size(dn)
din2=dn;
%%  Denosing using the BP method
% Parameter tuning for the BP method
%
dt=0.0005; % sampling
flo=0;     % Low frequency in band, default is 0
fhi=200;   % High frequency in band, default is Nyquist
nplo=6;    % number of poles for low cutoff
nphi=6;    % number of poles for high cutoff
phase=0;   % y: minimum phase, n: zero phase
verb0=0;   % verbosity flag
%
tic
d2_bp=amf_bandpass(din2,dt,flo,fhi,nplo,nphi,phase,verb0);
toc
%
%% Denosing using the BP+SOSVMF method 
% Parameter tuning：add the key parameters of the SOSVMF method

niter=2;                      % number of nonlinear iterations
liter=10;                     % liter: number of linear iterations (in divn)
order1=3;                     % order: accuracy order
eps_dv=0.01;                  % eps_dv: eps for divn  (default: 0.01)
eps_cg=1;                     % eps_cg: eps for CG    (default: 1)
tol_cg=0.000001;              % tol_cg: tolerence for CG (default: 0.000001)
rect(1)=50;                   % rect:  smoothing radius (ndim*1)
rect(2)=50;                   % "      "        "
rect(3)=1;                    % "      "        "
verb1=1;                      % verbosity flag

adj=0;                        % adjoint flag
add=0;                        % adding flag
ns=8;                         % spray radius
order2=2;                     % PWD order
eps=0.01;                     % regularization (default:0.01);
ndn=n1*n2;                    % size of dn (n1*n2)
nds=n1*n2;                    % size of ds (n1*n2)
type_mf=1;                    % 0 (MF) or 1 (SVMF)
ifsmooth=0;                   % 1 (if smooth) or 0 (only MF)
%                                                                                                             0,0,dipn,[],n1,n2,ns,2,0.01,n1*n2,n1*n2,type_mf,ifsmooth,d1,[]
tic
d2_bpsosvmf=amf_bandpasssosvmf(din2,dt,flo,fhi,nplo,nphi,phase,verb0,niter,liter,order1,eps_dv,eps_cg,tol_cg,rect,verb1,adj,add,n1,n2,ns,order2,eps,ndn,nds,type_mf,ifsmooth);
toc
% 
%% Denoising using the BP+SOSVMF+FK method 
%  Parameter tuning：add the key parameters of the dip filter in FK domain method
%
w=0.00;   % half width (in percentage) of the cone filter (i.e., w*nk=nwidth)
% 
tic
d2_bpsosvmffk=amf_bandpasssosvmffk(din2,dt,flo,fhi,nplo,nphi,phase,verb0,niter,liter,order1,eps_dv,eps_cg,tol_cg,rect,verb1,adj,add,n1,n2,ns,order2,eps,ndn,nds,type_mf,ifsmooth,w);
toc
%
%% Denoising data using the BP+SOSVMF+FK+curvelet method 
%  Parameter tuning：add the key parameters of the curvelet method
%
c1=1;                % Type of the transform(0: complex-valued curvelets,1: real-valued curvelets)
c2=1;                % Chooses one of two possibilities for the coefficients at the finest level(1: curvelets,2: wavelets)
c3=0.5;               % Thresholding parameter (alpha)
niter1=10;           % Number of iteration
% 
tic
d2_bpsosvmffkcurvelet=amf_bandpasssosvmffkcurvelet(din2,dt,flo,fhi,nplo,nphi,phase,verb0,niter,liter,order1,eps_dv,eps_cg,tol_cg,rect,verb1,adj,add,n1,n2,ns,order2,eps,ndn,nds,type_mf,ifsmooth,w,c1,c2,c3,niter1);
toc
%
%% Denoising using the AMF method 
%  Parameter tuning: add the key parameters for the local orthogonalization operation

par.dt=0.0005; % sampling
par.flo=0;     % Low frequency in band, default is 0
par.fhi=200;   % High frequency in band, default is Nyquist
par.nplo=6;    % number of poles for low cutoff
par.nphi=6;    % number of poles for high cutoff
par.phase=0;   % y: minimum phase, n: zero phase
par.verb0=0;   % verbosity flag

par.niter=niter;                 % number of nonlinear iterations
par.liter=liter;                 % liter: number of linear iterations (in divn)
par.order1=order1;               % order: accuracy order
par.eps_dv=eps_dv;               % eps_dv: eps for divn  (default: 0.01)
par.eps_cg=eps_cg;               % eps_cg: eps for CG    (default: 1)
par.tol_cg=tol_cg;               % tol_cg: tolerence for CG (default: 0.000001)
par.rect(1)=rect(1);             % rect:  smoothing radius (ndim*1)
par.rect(2)=rect(2);             % "      "        "
par.rect(3)=rect(3);             % "      "        "
par.verb1=verb1;                 % verbosity flag

par.adj=adj;                     % adjoint flag
par.add=add;                     % adding flag
par.ns=ns;                       % spray radius
par.order2=order2;               % PWD order
par.eps=eps;                     % regularization (default:0.01);
par.ndn=ndn;                     % size of dn (n1*n2)
par.nds=nds;                     % size of ds (n1*n2)
par.type_mf=type_mf;             % 0 (MF) or 1 (SVMF)
par.ifsmooth=ifsmooth;                   % 1 (if smooth) or 0 (only MF)

par.w=w;                        % half width (in percentage) of the cone filter (i.e., w*nk=nwidth)

par.c1=c1;                      % Type of the transform(0: complex-valued curvelets,1: real-valued curvelets)
par.c2=c2;                      % Chooses one of two possibilities for the coefficients at the finest level(1: curvelets,2: wavelets)
par.c3=c3;                      % Thresholding parameter (alpha)
par.niter1=niter1;              % Number of iteration
%
rec = zeros(3, 1);    % 3-D vector denoting smooth radius 
par.rec(1) = 10;
par.rec(2) = 10;
par.rec(3) = 1;
par.eps1=0;               % regularization parameter, default 0.0
par.niter2=20;            % number of CG iterations
par.verb=1;               % verbosity flag (default: 0) 
%tic
d2_amf=amf(din2,par);
toc 
%%
t=[0:n1]*0.002;
x=1:n2;
ngap=5;
ngap0=250;
d2_1=[din2,zeros(n1,ngap),d2_bp,din2-d2_bp,zeros(n1,ngap),d2_bpsosvmf,din2-d2_bpsosvmf];
d2_2=[d2_bpsosvmffkcurvelet,din2-d2_bpsosvmffkcurvelet,zeros(n1,ngap),d2_amf,din2-d2_amf];
%% local similarity maps
rect=[10,10,1];niter=20;eps=0;verb=0;
[simid21]=amf_localsimi(din2-d2_bp,d2_bp,rect,niter,eps,verb);
[simid22]=amf_localsimi(din2-d2_bpsosvmf,d2_bpsosvmf,rect,niter,eps,verb);
%[simid23]=amf_localsimi(din2-d2_bpsosvmffk,d2_bpsosvmffk,rect,niter,eps,verb);
[simid24]=amf_localsimi(din2-d2_bpsosvmffkcurvelet,d2_bpsosvmffkcurvelet,rect,niter,eps,verb);
[simid25]=amf_localsimi(din2-d2_amf,d2_amf,rect,niter,eps,verb);
d_sim2=[simid21,zeros(n1,ngap),simid22,zeros(n1,ngap),simid24,zeros(n1,ngap),simid25];
%% Plot figures/ first field data

figure('units','normalized','Position',[0.0 0.0 0.5, 1],'color','w');
subplot(2,1,1); imagesc(x,t,d1_11);colormap(amf_seis);hold on
text(n1/-70,-0.1,'(a)','color','k','Fontsize',20,'fontweight','bold','HorizontalAlignment','center');
text(n2/9.5,-0.05,'Raw','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/2.45,-0.05,'BP','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/1.2,-0.05,'BP+SOSVMF','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
ylabel('Time (s)','Fontsize',16,'fontweight','bold');
xlabel('Trace','Fontsize',16,'fontweight','bold');
set(gca,'Linewidth',2,'Fontsize',16,'Fontweight','bold');
colormap(amf_seis);caxis([-0.4,0.4]);
annotation(gcf,'rectangle',...
    [0.130769230769231 0.790426908150065 0.774684210526315 0.0685640362225094],...
    'LineWidth',3);
annotation(gcf,'textarrow',[0.287777777777777 0.312222222222222],...
    [0.710377206367494 0.730223123732252],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'High-amplitude','erratic noise'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textarrow',[0.792222222222223 0.818888888888889],...
    [0.760272109635602 0.802561132797737],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'Visible','signal','leakage'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textarrow',[0.865555555555556 0.857777777777777],...
    [0.768762677484787 0.812596900412419],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textarrow',[0.881111111111111 0.873333333333333],...
    [0.679513184584178 0.72334740751181],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);

subplot(2,1,2); imagesc(x,t,d1_21);colormap(amf_seis);hold on
text(n1/-70,-0.1,'(b)','color','k','Fontsize',20,'fontweight','bold','HorizontalAlignment','center');
text(n2/3.50,-0.05,'BP+SOSVMF+Curvelet','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/1.30,-0.05,'AMF','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
ylabel('Time (s)','Fontsize',16,'fontweight','bold');
xlabel('Trace','Fontsize',16,'fontweight','bold');
set(gca,'Linewidth',2,'Fontsize',16,'Fontweight','bold');
colormap(amf_seis);caxis([-0.4,0.4]);
annotation(gcf,'rectangle',...
    [0.12965811965812 0.317060073979214 0.774684210526315 0.0685640362225098],...
    'LineWidth',3);
annotation(gcf,'textarrow',[0.366666666666666 0.401111111111111],...
    [0.218489496806362 0.255837563451777],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'Visible','signal','leakage'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textarrow',[0.774444444444444 0.791111111111111],...
    [0.222335025380711 0.256069686249377],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);

print(gcf,'-depsc','-r300','fig8.eps');
%% zoomed sections
inds1=50:100;
figure('units','normalized','Position',[0.0 0.0 0.5, 1],'color','w');
subplot(2,1,1);amf_imagesc(d1_11(inds1,:),25,2,x,t(inds1));
ylabel('Time (s)','Fontsize',16,'fontweight','bold');
xlabel('Trace','Fontsize',16,'fontweight','bold');
set(gca,'Linewidth',2,'Fontsize',16,'Fontweight','bold');
colormap(amf_seis);caxis([-0.4,0.4]);
annotation(gcf,'textarrow',[0.22 0.207777777777778],...
    [0.800405268490375 0.759878419452888],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'High-amplitude','erratic noise'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textbox',...
    [0.147666666666667 0.639757820383451 0.089 0.0460677983656963],...
    'Color',[1 0 0],...
    'String',{'Random','  noise'},...
    'FontWeight','bold',...
    'FontSize',18,...
    'FitBoxToText','off',...
    'EdgeColor','none');
annotation(gcf,'textarrow',[0.385555555555555 0.414739583333333],...
    [0.859741728239058 0.833289819693564],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold');
annotation(gcf,'textarrow',[0.385555555555555 0.414739583333333],...
    [0.68516649848638 0.658714589940885],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold');
annotation(gcf,'textarrow',[0.846788194444444 0.846788194444445],...
    [0.69267207028578 0.727664294236013],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'Visible','signal','leakage'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);

subplot(2,1,2);amf_imagesc(d1_21(inds1,:),25,2,x,t(inds1));
ylabel('Time (s)','Fontsize',16,'fontweight','bold');
xlabel('Trace','Fontsize',12,'fontweight','bold');
set(gca,'Linewidth',2,'Fontsize',16,'Fontweight','bold');
colormap(amf_seis);caxis([-0.4,0.4]);
annotation(gcf,'textarrow',[0.443454861111111 0.453333333333333],...
    [0.281920769418123 0.242219201376691],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'Visible','signal','leakage'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textarrow',[0.694288194444445 0.668888888888889],...
    [0.389032144194317 0.315858809689215],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'Improved','signal energy'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);

text(n1/-50,-0.05,'(a)','color','k','Fontsize',20,'fontweight','bold','HorizontalAlignment','center');
text(n2/9.5,-0.048,'Raw','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/2.45,-0.048,'BP','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/1.20,-0.048,'BP+SOSVMF','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');

text(n1/-50,0.09,'(b)','color','k','Fontsize',20,'fontweight','bold','HorizontalAlignment','center');
text(n2/4.0,0.0935,'BP+SOSVMF+Curvelet','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/1.32,0.0935,'AMF','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');

print(gcf,'-depsc','-r300','fig9.eps');
%% Local similarity

figure('units','normalized','Position',[0.0 0.0 0.5, 1],'color','w');
imagesc(x,t,d1_sim1);colormap(jet);hold on
text(n2/9,-0.025,'BP','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/2.6,-0.025,'BP+SOSVMF','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/1.59,-0.025,'BP+SOSVMF+Curvelet','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/1.15,-0.025,'AMF','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');

c = colorbar;c.Label.String = 'Local similarity';c.Label.FontSize = 16;%c.Label.FontWeight = bold;
caxis([0,0.5]);
ylabel('Time (s)','Fontsize',16,'fontweight','bold');
xlabel('Trace','Fontsize',16,'fontweight','bold');
set(gca,'Linewidth',2,'Fontsize',16,'Fontweight','bold');

print(gcf,'-depsc','-r300','fig10.eps');

%% Plot figures/second field data
figure('units','normalized','Position',[0.0 0.0 0.5, 1],'color','w');
subplot(2,1,1); imagesc(x,t,d2_1);colormap(amf_seis);hold on
text(n1/-50,-0.1,'(a)','color','k','Fontsize',20,'fontweight','bold','HorizontalAlignment','center');
text(n2/9.8,-0.05,'Raw','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/2.45,-0.05,'BP','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/1.2,-0.05,'BP+SOSVMF','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
annotation(gcf,'rectangle',...
    [0.12995951417004 0.239327296248383 0.7758987854251 0.104786545924968],...
    'LineWidth',3);
annotation(gcf,'textarrow',[0.208888888888889 0.246666666666666],...
    [0.88014981159913 0.893234403744145],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textarrow',[0.365555555555556 0.403333333333333],...
    [0.879136640373192 0.892221232518207],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textarrow',[0.543333333333333 0.494444444444444],...
    [0.885356470980758 0.86423505572442],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'Stronger','signal','leakage'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textarrow',[0.841111111111111 0.832222222222222],...
    [0.862993241443907 0.842845205190131],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
colormap(amf_seis);caxis([-0.4,0.4]);
ylabel('Time (s)','Fontsize',16,'fontweight','bold');
xlabel('Trace','Fontsize',16,'fontweight','bold');
set(gca,'Linewidth',2,'Fontsize',16,'Fontweight','bold');
subplot(2,1,2); imagesc(x,t,d2_2);colormap(amf_seis);hold on
text(n1/-50,-0.1,'(b)','color','k','Fontsize',20,'fontweight','bold','HorizontalAlignment','center');
% text(n2/6.0,-0.05,'BP+SOSVMF+FK','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/4.0,-0.05,'BP+SOSVMF+Curvelet','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/1.33,-0.05,'AMF','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
annotation(gcf,'rectangle',...
    [0.130769230769231 0.712807244501941 0.774684210526314 0.104786545924968],...
    'LineWidth',3);
annotation(gcf,'textarrow',[0.302222222222222 0.293333333333334],...
    [0.33559677766376 0.315448741409984],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textarrow',[0.691111111111111 0.682222222222222],...
    [0.337157375182509 0.317009338928733],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textarrow',[0.85 0.863333333333333],...
    [0.366539340734689 0.325227963525836],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'Weaker','   signal','leakage'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
ylabel('Time (s)','Fontsize',16,'fontweight','bold');
xlabel('Trace','Fontsize',16,'fontweight','bold');
set(gca,'Linewidth',2,'Fontsize',16,'Fontweight','bold');
colormap(amf_seis);caxis([-0.4,0.4]);

print(gcf,'-depsc','-r300','fig11.eps');
%% zoomed sections
inds1=250:500;

figure('units','normalized','Position',[0.0 0.0 0.5, 1],'color','w');
subplot(2,1,1);amf_imagesc(d2_1(inds1,:),25,2,x,t(inds1));
ylabel('Time (s)','Fontsize',16,'fontweight','bold');
xlabel('Trace','Fontsize',16,'fontweight','bold');
set(gca,'Linewidth',2,'Fontsize',16,'Fontweight','bold');
colormap(amf_seis);caxis([-0.4,0.4]);
annotation(gcf,'textbox',...
    [0.127296124749109 0.841893252769386 0.0815927641397799 0.0542647678383215],...
    'Color',[1 0 0],...
    'String',{'Random','  noise'},...
    'FontWeight','bold',...
    'FontSize',18,...
    'FontName','Helvetica Neue',...
    'FitBoxToText','off',...
    'EdgeColor','none');
annotation(gcf,'textarrow',[0.192222222222218 0.156666666666667],...
    [0.679311926832538 0.704154002026343],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'High-amplitude','erratic noise'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textarrow',[0.377777777777778 0.407777777777778],...
    [0.810536980749748 0.794326241134757],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18);
annotation(gcf,'textarrow',[0.506666666666667 0.492614379084945],...
    [0.835673422161822 0.811272444243296],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',12);
annotation(gcf,'textarrow',[0.547777777777778 0.567777777777778],...
    [0.78460775581043 0.815826285518386],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'Stronger','signal',' leakage'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18,...
    'FontName','Helvetica Neue');
annotation(gcf,'textarrow',[0.818888888888889 0.804836601307166],...
    [0.835850956696879 0.811449978778354],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',12);
annotation(gcf,'textarrow',[0.855555555555556 0.875555555555556],...
    [0.781660070340408 0.812878600048363],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18,...
    'FontName','Helvetica Neue');
annotation(gcf,'textarrow',[0.343333333333334 0.33],...
    [0.246723049309055 0.281969776398682],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18,...
    'FontName','Helvetica Neue');
subplot(2,1,2);amf_imagesc(d2_2(inds1,:),25,2,x,t(inds1));
ylabel('Time (s)','Fontsize',12,'fontweight','bold');
xlabel('Trace','Fontsize',12,'fontweight','bold');
set(gca,'Linewidth',2,'Fontsize',15,'Fontweight','bold');
colormap(amf_seis);caxis([-0.4,0.4]);
annotation(gcf,'textarrow',[0.343333333333334 0.33],...
    [0.246723049309055 0.281969776398682],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18,...
    'FontName','Helvetica Neue');
annotation(gcf,'textarrow',[0.374444444444444 0.388888888888888],...
    [0.296890672016048 0.330332386888763],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18,...
    'FontName','Helvetica Neue');
annotation(gcf,'textarrow',[0.473333333333333 0.495947712418278],...
    [0.258358662613982 0.289341235569076],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',12);
annotation(gcf,'textarrow',[0.6975816993464 0.688888888888889],...
    [0.366702559679747 0.331995987963892],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'Improved','signal',' energy'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18,...
    'FontName','Helvetica Neue');
annotation(gcf,'textarrow',[0.732222222222222 0.718888888888888],...
    [0.24271101320073 0.277957740290357],'Color',[1 0 0],'TextColor',[1 0 0],...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18,...
    'FontName','Helvetica Neue');
annotation(gcf,'textarrow',[0.858888888888888 0.887777777777777],...
    [0.259879335892875 0.291097865600831],'Color',[1 0 0],'TextColor',[1 0 0],...
    'String',{'Weaker','signal','leakage'},...
    'LineWidth',3,...
    'HeadWidth',25,...
    'HeadLength',15,...
    'FontWeight','bold',...
    'FontSize',18,...
    'FontName','Helvetica Neue');

text(n1/-50,-0.23,'(a)','color','k','Fontsize',20,'fontweight','bold','HorizontalAlignment','center');
text(n2/9.5,-0.22,'Raw','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/2.45,-0.22,'BP','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/1.20,-0.22,'BP+SOSVMF','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');

text(n1/-50,0.46,'(b)','color','k','Fontsize',20,'fontweight','bold','HorizontalAlignment','center');
text(n2/4.0,0.48,'BP+SOSVMF+Curvelet','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/1.33,0.48,'AMF','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
print(gcf,'-depsc','-r300','fig12.eps');
%% Local similarity
figure('units','normalized','Position',[0.0 0.0 0.5, 1],'color','w');
imagesc(x,t,d_sim2);colormap(jet);hold on
text(n2/9,-0.025,'BP','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/2.6,-0.025,'BP+SOSVMF','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/1.59,-0.025,'BP+SOSVMF+Curvelet','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
text(n2/1.15,-0.025,'AMF','color','k','Fontsize',16,'fontweight','bold','HorizontalAlignment','center');
c = colorbar;c.Label.String = 'Local similarity';c.Label.FontSize = 16;%c.Label.FontWeight = bold;
caxis([0,1]);
ylabel('Time (s)','Fontsize',12,'fontweight','bold');
xlabel('Trace','Fontsize',12,'fontweight','bold');
set(gca,'Linewidth',2,'Fontsize',15,'Fontweight','bold');

print(gcf,'-depsc','-r300','fig13.eps');

%%